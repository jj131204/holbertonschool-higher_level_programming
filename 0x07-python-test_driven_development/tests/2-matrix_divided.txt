import the function:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Correct cases:

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix_divided([[6, 8.2, 10], [4, 5, 6]], 2)
    [[3.0, 4.1, 5.0], [2.0, 2.5, 3.0]]

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

    >>> matrix_divided([[1, 2, 3], [3, 4, 5], [6, 7, 8]] , 2)
    [[0.33, 0.67, 1.0], [1.0, 1.33, 1.67], [2.0, 2.33, 2.67]]


Error cases

    >>> matrix_divided([[4, 3, 2], ["hola", 2, 3]], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2, 3], [1, 2, 3, 4]], 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

